<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Becoming a full stack developer in 6 months</title>
    <description>A blog about learning software engineering in a hurry</description>
    <link>http://charliecog.github.io/mayden_blog/mayden_blog/</link>
    <atom:link href="http://charliecog.github.io/mayden_blog/mayden_blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 28 Sep 2015 15:41:03 +0100</pubDate>
    <lastBuildDate>Mon, 28 Sep 2015 15:41:03 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>HTML/CSS - Float left</title>
        <description>&lt;p&gt;Today we have begun working on HTML and CSS - here is one of the concepts that I found interesting. It is how to display elements next to each other without changing the display to inline. It is using float:left&lt;/p&gt;

&lt;p&gt;Here’s my HTML code:
&lt;img src=&quot;http://charliecog.github.io/mayden_blog/img/codeshot1.jpg&quot; alt=&quot;My html code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was linked to the following CSS code:
&lt;img src=&quot;http://charliecog.github.io/mayden_blog/img/frontendshot2.jpg&quot; alt=&quot;css code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here is the result:
&lt;img src=&quot;http://charliecog.github.io/mayden_blog/img/webshot.jpg&quot; alt=&quot;Divs display floated&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2015 16:38:22 +0100</pubDate>
        <link>http://charliecog.github.io/mayden_blog/mayden_blog/float-left</link>
        <guid isPermaLink="true">http://charliecog.github.io/mayden_blog/mayden_blog/float-left</guid>
        
        
        <category>css,</category>
        
        <category>html,</category>
        
        <category>float</category>
        
      </item>
    
      <item>
        <title>PHP script to display form data in HTML</title>
        <description>&lt;p&gt;After a quick introduction to PHP arrays - i was interested in writing a quick piece of code that practices array creation, assigning new items to that array and then finally recalling them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://charliecog.github.io/mayden_blog/img/codeshot.jpg&quot; alt=&quot;My PHP code&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I created a numerical based index array and used an HTML form input to prompt the user to enter a name and email. These bits of data were then put into the POST array and then called upon using the zero index numbering scheme. It is a simple solution and with a little bit of HTML and CSS I was able to build a frontend to display it all in the browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://charliecog.github.io/mayden_blog/img/frontendshot.png&quot; alt=&quot;My frontend&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Sep 2015 14:37:22 +0100</pubDate>
        <link>http://charliecog.github.io/mayden_blog/mayden_blog/php-script-to-display-form-data-in-html</link>
        <guid isPermaLink="true">http://charliecog.github.io/mayden_blog/mayden_blog/php-script-to-display-form-data-in-html</guid>
        
        
        <category>php,</category>
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>Using the lamp stack and intro to databases</title>
        <description>&lt;p&gt;Here is what we have done today, I am writing this down as a method of revision in an attempt to commit this from short term to long term memory. There are likely many ways to do the following stuff, but this is how I learnt it today.&lt;/p&gt;

&lt;p&gt;The goal of today was to set up a virtual machine, build a database in MySQL on the VM (virtual machine) and connect a local PHP script to it to make changes to it. Here’s the steps:&lt;/p&gt;

&lt;p&gt;Open terminal and use an SSH connection to connect to the virtual machine (we used Vagrant for the virtual machine)&lt;/p&gt;

&lt;p&gt;Use the mysql command on the terminal to open MySQL on the VM&lt;/p&gt;

&lt;p&gt;Create a simple database using basic MySQL commands - create database [database name], use [database name], CREATE TABLE [TABLE NAME] ([column name, type, PRIMARY KEY, auto_increment, CREATE TABLE people (id INT(8) PRIMARY KEY auto_increment, firstname VARCHAR(50), lastname(50), dob DATE); (this last long one sets the parameters for the table), INSERT INTO [table] ([fields]) VALUES ([values])
  exit the virtual machine and open sequel pro to connect back to the VM and view the database in a GUI&lt;/p&gt;

&lt;p&gt;Use an IDE (in this case Atom) to create a documents.php file in inside the shared html file (sat inside the vagrant directory on the local machine - this constantly syncs to keep a record on both local and virtual machines
 open PHP tags and use mysqli to connect to the database - new mysqli($servername, $username, $password, $database); [all these are predetermined variables]&lt;/p&gt;

&lt;p&gt;use MySQL code within PHP document to make changes eg: “SELECT * FROM people WHERE firstname IS NOT NULL;”&lt;/p&gt;

&lt;p&gt;This allowed me to make changes to a MySQL database hosted on a VM ip address using a local PHP script.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Sep 2015 19:12:22 +0100</pubDate>
        <link>http://charliecog.github.io/mayden_blog/mayden_blog/using-the-lamp-stack-and-intro-to-databases</link>
        <guid isPermaLink="true">http://charliecog.github.io/mayden_blog/mayden_blog/using-the-lamp-stack-and-intro-to-databases</guid>
        
        
        <category>lamp</category>
        
        <category>stack</category>
        
      </item>
    
      <item>
        <title>First week - setting up environment, command line and Git</title>
        <description>&lt;p&gt;The first week has flown by and I am currently taking stock of what I have learnt this week at the Mayden academy. To say that I am further on than I thought I would be at this point would be an understatement! There has been a great learning pace throughout the first week and all 6 of us academy trainees have been extremely enthusiastic to push on with getting through the content of the course. This has been a really refreshing learning environment to be a part of and has encouraged all of us to make a real effort with absorbing as much information as possible.&lt;/p&gt;

&lt;p&gt;The first couple of days were spent getting used to our new development laptops - I hadn’t ever used a mac for any serious stretch of time so getting my head around the OS has been and will continue to be an area I am making a concerted effort with. It sounds like I should have it cracked within a couple of weeks so I am not too worried.&lt;/p&gt;

&lt;p&gt;Making the changeover from Windows to Mac aside, we have spent time getting used to the way the company works - the particular software that is used for project management, timekeeping and task delivery. Like everything else I learn by repetition and I am already finding it easier to use with only a weeks use under my belt.&lt;/p&gt;

&lt;p&gt;The Mayden software engineering teams, as well as a large portion of the digital teams all over the world, use a working methodolgy called agile. We watched a few videos, had a discussion and then sat in on an actual agile meeting within the business. This is to open our eyes to the fact that developing software is not just about coding - the ability to work effectively in a team is just as important. The particular type of Agile that we are learning is called scrum and its definately worth a google.&lt;/p&gt;

&lt;p&gt;The second half of the week we spent our time getting our teeth into some slightly more technical stuff, which if I am honest, I was quite glad for. We covered GIT (the version control system) GITHUB (the frontend for using GIT), trying out multiple IDE’s (text editors) using the command line, writing simple bash scripts to customize our working environment, setting up local servers, an intoduction to how the web works and finally setting up this very blog using Jekyll and hosting on GITHUB to practice all of these skills.&lt;/p&gt;

&lt;p&gt;There has been alot to cover in only a few days but I have found myself really encouraged with the amount of information absorbed. Even writing this blog has made me realise just how much stuff the trainers have covered. Im excited about getting back in on Monday morning and continuing to climb the learning curve, although I suspect it will get steeper and steeper as the weeks go on!&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Sep 2015 10:18:22 +0100</pubDate>
        <link>http://charliecog.github.io/mayden_blog/mayden_blog/first_week</link>
        <guid isPermaLink="true">http://charliecog.github.io/mayden_blog/mayden_blog/first_week</guid>
        
        
        <category>first</category>
        
        <category>week</category>
        
      </item>
    
      <item>
        <title>Why do I want to learn to code</title>
        <description>&lt;p&gt;Of all the skills that a web developer requires, coding was the aspect I was most keen to learn, and here’s why: a quick Google will tell you that one of the most important qualities in a developer is the ability to problem solve. In the short time I’ve spent coding so far, this career cliché has turned out to be the complete truth.&lt;/p&gt;

&lt;p&gt;What I love about coding is that code can be right or it can be wrong – either it works or it doesn’t. The satisfaction from hacking together something, no matter how simple, is in refreshing the browser and seeing a creation come together. To get to this point takes all of my cunning and guile as learning developer – each line of code is like a rubik’s cube, there to be attempted and solved.&lt;/p&gt;

&lt;p&gt;Coding encourages a method of thought that I haven’t come across in any of the other industries that I’ve worked in and I’ve quickly realised that often I can be my own worst enemy. In the run up to the Academy I spent countless nights sat in front of my screen, staring at the intimidating blank developer screen and flashing underscore, awaiting a spark of inspiration to help me solve whatever problem I was currently struggling through. Those nights taught me a lesson: the approach to the problem is just as important as the execution. By leaping ahead and downloading software I didn’t know how to use fully and attempting problems that as a beginner were beyond me, I was giving myself a harder time than I needed to. In essence I shouldn’t be attempting a black run in the alps before doing my time on the nursery slopes. But I digress…&lt;/p&gt;

&lt;p&gt;Another thing that draws me to coding is opportunity to work in the software development industry. Whilst to an outsider looking in, the technology sector appears as an established behemoth full of complicated layers of technical knowledge, impenetrable to all those that don’t possess a computer science degree, the truth is a different story.&lt;/p&gt;

&lt;p&gt;The world wide web is only 25 years old and in the grand scheme of things, still a young technology. It’s a rare thing to have an opportunity to participate in the early stages of a global innovation that’s dramatically impacting the way we live and moving society forward. For me the opportunity to work in the field is similar to working in aviation just after the Wright Brothers’ first flight or the printing press around the time of Gutenberg! Perhaps these comparisons seem a little far fetched, but the impact that the internet has had on society cannot be denied. To be able to be part of the movement is a dream come true!&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2015 15:12:22 +0100</pubDate>
        <link>http://charliecog.github.io/mayden_blog/mayden_blog/why-do-i-want-to-learn-to-code</link>
        <guid isPermaLink="true">http://charliecog.github.io/mayden_blog/mayden_blog/why-do-i-want-to-learn-to-code</guid>
        
        
        <category>learning</category>
        
        <category>to</category>
        
        <category>code</category>
        
      </item>
    
  </channel>
</rss>
